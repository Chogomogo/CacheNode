name: Node CI with GCS Cache

on:
  push:
    branches:
      - '*'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write  
jobs:
  build:
    runs-on: ubuntu-latest

    env:
      BUCKET_NAME: ci-cache-node-1720123456
      CACHE_DIR: node_modules
      CACHE_FILE_NAME: cache.tar.zst

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate with GCP via Service Account JSON
        uses: google-github-actions/auth@v2
        with:
         credentials_json: '${{ secrets.JSON_SECRET }}'
         export_environment_variables: true
         create_credentials_file: true

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: Compute cache key
        id: compute-key
        run: |
          if [ -f package-lock.json ]; then
            FILE_TO_HASH=package-lock.json
          else
            FILE_TO_HASH=package.json
          fi
          HASH_KEY=$(sha256sum "$FILE_TO_HASH" | awk '{print $1}')
          echo "cache-key=$HASH_KEY" >> "$GITHUB_OUTPUT"

      - name: Check cache in GCS
        id: check-cache
        continue-on-error: true
        run: |
          CACHE_KEY=${{ steps.compute-key.outputs.cache-key }}
          OBJECT_PATH="gs://${BUCKET_NAME}/npm-cache/$CACHE_KEY/$CACHE_FILE_NAME"
          if gsutil ls "$OBJECT_PATH" > /dev/null 2>&1; then
            echo "found=true" >> "$GITHUB_OUTPUT"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Restore cache if exists
        if: steps.check-cache.outputs.found == 'true'
        run: |
          CACHE_KEY=${{ steps.compute-key.outputs.cache-key }}
          gsutil cp gs://${BUCKET_NAME}/npm-cache/$CACHE_KEY/$CACHE_FILE_NAME ./cache.tar.zst
          mkdir -p $CACHE_DIR
          tar --zstd -xvf cache.tar.zst -C .

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies (npm ci)
        if: steps.check-cache.outputs.found == 'false'
        run: |
          npm install

      - name: Upload cache to GCS
        if: steps.check-cache.outputs.found == 'false'
        run: |
          CACHE_KEY=${{ steps.compute-key.outputs.cache-key }}
          mkdir -p ./tmp-cache
          tar --zstd -cvf ./tmp-cache/$CACHE_FILE_NAME $CACHE_DIR
          gsutil cp ./tmp-cache/$CACHE_FILE_NAME gs://${BUCKET_NAME}/npm-cache/$CACHE_KEY/$CACHE_FILE_NAME
